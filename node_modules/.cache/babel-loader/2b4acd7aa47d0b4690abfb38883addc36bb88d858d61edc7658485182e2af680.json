{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\starwars\\\\src\\\\Components\\\\Peoples.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Peoples = () => {\n  _s();\n  const [scrollY, setScrollY] = useState(0);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    const handleScroll = () => {\n      const element = elementRef.current;\n      if (element) {\n        const {\n          top\n        } = element.getBoundingClientRect();\n        setScrollY(top);\n      }\n    };\n\n    // Attach the scroll event listener\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef,\n      style: {\n        position: 'fixed',\n        top: scrollY + 'px',\n        // Update the position based on the scrollY state\n        left: '50%',\n        transform: 'translateX(-50%)',\n        backgroundColor: 'red',\n        padding: '10px',\n        color: 'white'\n      },\n      children: [\"This element's position changes on scrolling. \", scrollY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '2000px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Peoples, \"g1kJb0Ou6gZC8xm+kKp1iPUX9Io=\");\n_c = Peoples;\nexport default Peoples;\nvar _c;\n$RefreshReg$(_c, \"Peoples\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Peoples","_s","scrollY","setScrollY","elementRef","handleScroll","element","current","top","getBoundingClientRect","window","addEventListener","removeEventListener","children","ref","style","position","left","transform","backgroundColor","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","height","_c","$RefreshReg$"],"sources":["D:/React_JS/starwars/src/Components/Peoples.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst Peoples = () => {\r\n    const [scrollY, setScrollY] = useState(0);\r\n    const elementRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const element = elementRef.current;\r\n            if (element) {\r\n                const { top } = element.getBoundingClientRect();\r\n                setScrollY(top);\r\n            }\r\n        };\r\n\r\n        // Attach the scroll event listener\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        // Clean up the event listener when the component unmounts\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                ref={elementRef}\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: scrollY + 'px', // Update the position based on the scrollY state\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    backgroundColor: 'red',\r\n                    padding: '10px',\r\n                    color: 'white',\r\n                }}\r\n            >\r\n                This element's position changes on scrolling. {scrollY}\r\n            </div>\r\n            <div style={{ height: '2000px' }}>\r\n                {/* A tall div to make the page scrollable */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Peoples;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMO,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,OAAO,GAAGF,UAAU,CAACG,OAAO;MAClC,IAAID,OAAO,EAAE;QACT,MAAM;UAAEE;QAAI,CAAC,GAAGF,OAAO,CAACG,qBAAqB,CAAC,CAAC;QAC/CN,UAAU,CAACK,GAAG,CAAC;MACnB;IACJ,CAAC;;IAED;IACAE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACTK,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;IACtD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAc,QAAA,gBACId,OAAA;MACIe,GAAG,EAAEV,UAAW;MAChBW,KAAK,EAAE;QACHC,QAAQ,EAAE,OAAO;QACjBR,GAAG,EAAEN,OAAO,GAAG,IAAI;QAAE;QACrBe,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,kBAAkB;QAC7BC,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE,MAAM;QACfC,KAAK,EAAE;MACX,CAAE;MAAAR,QAAA,GACL,gDACiD,EAACX,OAAO;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACN1B,OAAA;MAAKgB,KAAK,EAAE;QAAEW,MAAM,EAAE;MAAS;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CA3CID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}