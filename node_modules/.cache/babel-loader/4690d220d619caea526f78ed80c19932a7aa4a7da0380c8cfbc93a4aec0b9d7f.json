{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\starwars\\\\src\\\\Components\\\\SideNav.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './sidenav.css';\nimport Folder from '../MenuIcons/FolderSimple.svg';\nimport Arrow from '../MenuIcons/CaretRight.svg';\nimport { IoMdArrowBack } from 'react-icons/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SideNav() {\n  _s();\n  const [open, setOpen] = useState(true);\n  const [dropOpen, setDropOpen] = useState(false);\n  const [moviesName, setMoviesName] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  let mNameData = [];\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setDropOpen(true); // Open the dropdown when a menu item is clicked\n  };\n\n  const Dropfn = () => {\n    setDropOpen(!dropOpen);\n  };\n  useEffect(() => {\n    fetchDataFromAPI();\n  }, []);\n  const fetchDataFromAPI = async () => {\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n      mNameData = data.results.map(name => name.title);\n      setMoviesName(mNameData); // Store the movie names in the state\n      doSomethingWithData();\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  };\n  const doSomethingWithData = () => {\n    console.log(mNameData);\n  };\n  const menuElements = [\n    // ... (unchanged)\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ``,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` h-screen  ${open ? 'w-72' : 'w-24 -ms-6'} relative duration-300 sideNavbarMain`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IoMdArrowBack, {\n          className: `md:hidden sm:block bg-white text-black-50 text-2xl rounded-full absolute -right-3 top-5 cursor-pointer ${!open && 'rotate-180'}`,\n          onClick: () => setOpen(!open)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menuElements.map((element, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `,\n            onClick: () => handleItemClick(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), dropOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 mx-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-white font-bold\",\n        children: \"Movies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-white\",\n        children: moviesName.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(SideNav, \"rNFgVPs9enx7eoJeb7oSLv/5MK0=\");\n_c = SideNav;\nvar _c;\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"names":["React","useEffect","useState","Link","Folder","Arrow","IoMdArrowBack","jsxDEV","_jsxDEV","SideNav","_s","open","setOpen","dropOpen","setDropOpen","moviesName","setMoviesName","selectedItem","setSelectedItem","mNameData","handleItemClick","item","Dropfn","fetchDataFromAPI","response","fetch","data","json","results","map","name","title","doSomethingWithData","error","console","log","menuElements","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","element","index","Fragment","movie","_c","$RefreshReg$"],"sources":["D:/React_JS/starwars/src/Components/SideNav.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './sidenav.css';\r\nimport Folder from '../MenuIcons/FolderSimple.svg';\r\nimport Arrow from '../MenuIcons/CaretRight.svg';\r\nimport { IoMdArrowBack } from 'react-icons/io';\r\n\r\nexport function SideNav() {\r\n    const [open, setOpen] = useState(true);\r\n    const [dropOpen, setDropOpen] = useState(false);\r\n    const [moviesName, setMoviesName] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    let mNameData = [];\r\n\r\n    const handleItemClick = (item) => {\r\n        setSelectedItem(item);\r\n        setDropOpen(true); // Open the dropdown when a menu item is clicked\r\n    };\r\n\r\n    const Dropfn = () => {\r\n        setDropOpen(!dropOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDataFromAPI();\r\n    }, []);\r\n\r\n    const fetchDataFromAPI = async () => {\r\n        try {\r\n            const response = await fetch('https://swapi.dev/api/films/');\r\n            const data = await response.json();\r\n            mNameData = data.results.map((name) => name.title);\r\n            setMoviesName(mNameData); // Store the movie names in the state\r\n            doSomethingWithData();\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n        }\r\n    };\r\n\r\n    const doSomethingWithData = () => {\r\n        console.log(mNameData);\r\n    };\r\n\r\n    const menuElements = [\r\n        // ... (unchanged)\r\n    ];\r\n\r\n    return (\r\n        <div className={``}>\r\n            <div className={` h-screen  ${open ? 'w-72' : 'w-24 -ms-6'} relative duration-300 sideNavbarMain`}>\r\n                <div>\r\n                    <IoMdArrowBack\r\n                        className={`md:hidden sm:block bg-white text-black-50 text-2xl rounded-full absolute -right-3 top-5 cursor-pointer ${\r\n                            !open && 'rotate-180'\r\n                        }`}\r\n                        onClick={() => setOpen(!open)}\r\n                    />\r\n                </div>\r\n                <ul>\r\n                    {menuElements.map((element, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <li\r\n                                className={`text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${\r\n                                    selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'\r\n                                } `}\r\n                                onClick={() => handleItemClick(element)}\r\n                            >\r\n                                {/* ... (unchanged) */}\r\n                            </li>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {dropOpen && (\r\n                <div className=\"mt-4 mx-4\">\r\n                    <h3 className=\"text-white font-bold\">Movies:</h3>\r\n                    <ul className=\"text-white\">\r\n                        {moviesName.map((movie, index) => (\r\n                            <li key={index}>{movie}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}