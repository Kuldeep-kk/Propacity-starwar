{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\starwars\\\\src\\\\Components\\\\SideNav.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport './sidenav.css';\nimport Folder from '../MenuIcons/FolderSimple.svg';\nimport Alien from '../MenuIcons/Alien.svg';\nimport CarProfile from '../MenuIcons/CarProfile.svg';\nimport FilmReel from '../MenuIcons/FilmReel.svg';\nimport Planet from '../MenuIcons/Planet.svg';\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\nimport Users from '../MenuIcons/Users.svg';\nimport Arrow from '../MenuIcons/CaretRight.svg';\nimport { IoMdArrowBack } from \"react-icons/io\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SideNav({\n  sendDataToParent\n}) {\n  _s();\n  const [open, setOpen] = useState(true);\n  const [dropOpen, setDropOpen] = useState(false);\n  const [moviesName, setMoviesName] = useState({});\n  const [dropDownIcons, setDropDownIcons] = useState(FilmReel);\n  const [currentPath, setCurrentPath] = useState('/films');\n  let mNameData = [];\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setDropOpen(!dropOpen);\n    if (item.path === '/films') {\n      setDropDownIcons(FilmReel);\n    } else if (item.path === '/people') {\n      setDropDownIcons(Users);\n    } else if (item.path === '/planets') {\n      setDropDownIcons(Planet);\n    } else if (item.path === '/species') {\n      setDropDownIcons(Alien);\n    } else if (item.path === '/starships') {\n      setDropDownIcons(Rocket);\n    } else if (item.path === '/vehicles') {\n      setDropDownIcons(CarProfile);\n    }\n    setCurrentPath(item.path);\n    fetchDataFromAPI(item.path);\n  };\n  const Dropfn = () => {\n    setDropOpen(!dropOpen);\n  };\n  const fetchDataFromAPI = async endpoint => {\n    try {\n      const response = await fetch(`https://swapi.dev/api${endpoint}/`);\n      //if(endpoint==='/films'){\n      //   const data = await response.json();\n      //   mNameData=data.results.map((name)=>name.title);\n      //  setMoviesName(mNameData);\n      // sendDataToParent(moviesName);\n      // doSomethingWithData();\n\n      //}\n      let moviesObject = {};\n      let peopleObject = {};\n      let planetsObject = {};\n      let speciesObject = {};\n      let starshipsObject = {};\n      let vehiclesObject = {};\n      if (endpoint === '/films') {\n        const data = await response.json();\n        data.results.forEach(movie => {\n          const movieData = {\n            first: movie.title,\n            second: movie.director,\n            third: movie.release_date\n          };\n          moviesObject[movie.title] = movieData;\n        });\n        setMoviesName(moviesObject);\n        sendDataToParent(moviesObject, currentPath);\n      } else if (endpoint === '/people') {\n        const data = await response.json();\n        data.results.forEach(people => {\n          const peopleData = {\n            first: people.name,\n            second: people.gender,\n            third: people.birth_year\n          };\n          peopleObject[people.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject);\n      } else if (endpoint === '/planets') {\n        const data = await response.json();\n        data.results.forEach(planet => {\n          const planetsData = {\n            first: planet.name,\n            second: planet.terrain,\n            third: planet.population\n          };\n          planetsObject[planet.name] = planetsData;\n        });\n        setMoviesName(planetsObject);\n        sendDataToParent(planetsObject);\n      } else if (endpoint === '/species') {\n        const data = await response.json();\n        data.results.forEach(specie => {\n          const speciesData = {\n            first: specie.name,\n            second: specie.gender,\n            third: people.birth_year\n          };\n          peopleObject[people.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject);\n      } else if (endpoint === '/starships') {\n        const data = await response.json();\n        data.results.forEach(people => {\n          const peopleData = {\n            first: people.name,\n            second: people.gender,\n            third: people.birth_year\n          };\n          peopleObject[people.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject);\n      } else if (endpoint === '/vehicles') {\n        const data = await response.json();\n        data.results.forEach(people => {\n          const peopleData = {\n            first: people.name,\n            second: people.gender,\n            third: people.birth_year\n          };\n          peopleObject[people.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject);\n      }\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  };\n  const doSomethingWithData = () => {\n    console.log(mNameData);\n  };\n  const menuElements = [{\n    icon: Folder,\n    title: 'Films',\n    path: '/films',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'People',\n    path: '/people',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Planets',\n    path: '/planets',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Species',\n    path: '/species',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Starships',\n    path: '/starships',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Vehicles',\n    path: '/vehicles',\n    arrow: Arrow\n  }];\n  useEffect(() => {\n    fetchDataFromAPI(menuElements[0].path);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ``,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` h-screen  ${open ? 'w-72' : 'w-24 -ms-6'} relative duration-300 sideNavbarMain`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IoMdArrowBack, {\n          className: `md:hidden sm:block bg-white text-black-50 text-2xl rounded-full absolute -right-3 top-5 cursor-pointer ${!open && 'rotate-180'}`,\n          onClick: () => setOpen(!open)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menuElements.map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/particularpage\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `,\n              onClick: () => handleItemClick(element),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `pt-1 `,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: element.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `  text-white font-medium  duration-300 flex-1 ${!open && 'hidden'}`,\n                children: element.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${!open && 'hidden'} absolute  duration-300 right-3 pt-1 ${selectedItem && selectedItem.title === element.title && dropOpen ? 'rotate-90' : 'rotate-0'}`,\n                onClick: Dropfn,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: element.arrow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 222\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 27\n          }, this), dropOpen && selectedItem.title === element.title ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \" max-h-40 overflow-y-auto uldropNav\",\n            children: Object.keys(moviesName).map(title => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md mt-2 dropNavBar\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pt-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: dropDownIcons,\n                    alt: \"Drop Down Icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 72\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white font-medium duration-300 flex-1\",\n                  children: moviesName[title].first\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"absolute duration-300 right-3 pt-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: element.arrow,\n                    alt: \"Arrow Icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 102\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 49\n                }, this)]\n              }, title, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 45\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n}\n_s(SideNav, \"orFw2YaeNRCsE9UVw2+kZhdaHjU=\");\n_c = SideNav;\nvar _c;\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"names":["React","Folder","Alien","CarProfile","FilmReel","Planet","Rocket","Users","Arrow","IoMdArrowBack","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SideNav","sendDataToParent","_s","open","setOpen","dropOpen","setDropOpen","moviesName","setMoviesName","dropDownIcons","setDropDownIcons","currentPath","setCurrentPath","mNameData","selectedItem","setSelectedItem","handleItemClick","item","path","fetchDataFromAPI","Dropfn","endpoint","response","fetch","moviesObject","peopleObject","planetsObject","speciesObject","starshipsObject","vehiclesObject","data","json","results","forEach","movie","movieData","first","title","second","director","third","release_date","people","peopleData","name","gender","birth_year","planet","planetsData","terrain","population","specie","speciesData","error","console","doSomethingWithData","log","menuElements","icon","arrow","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","to","src","Object","keys","alt","_c","$RefreshReg$"],"sources":["D:/React_JS/starwars/src/Components/SideNav.js"],"sourcesContent":["import * as React from 'react';\r\nimport './sidenav.css';\r\nimport Folder from '../MenuIcons/FolderSimple.svg';\r\nimport Alien from '../MenuIcons/Alien.svg';\r\nimport CarProfile from '../MenuIcons/CarProfile.svg';\r\nimport FilmReel from '../MenuIcons/FilmReel.svg';\r\nimport Planet from '../MenuIcons/Planet.svg';\r\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\r\nimport Users from '../MenuIcons/Users.svg';\r\nimport Arrow from '../MenuIcons/CaretRight.svg';\r\nimport {IoMdArrowBack} from \"react-icons/io\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function SideNav({ sendDataToParent }) {\r\n    const [open,setOpen]=useState(true);\r\n    const [dropOpen,setDropOpen]=useState(false);\r\n    const [moviesName,setMoviesName]=useState({});\r\n    const [dropDownIcons,setDropDownIcons]=useState(FilmReel);\r\n    const [currentPath,setCurrentPath]=useState('/films')\r\n    let mNameData = [];\r\n\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleItemClick = (item) => {\r\n        setSelectedItem(item);\r\n        setDropOpen(!dropOpen);\r\n        if(item.path==='/films'){\r\n            setDropDownIcons(FilmReel);\r\n        }\r\n        else if(item.path==='/people'){\r\n            setDropDownIcons(Users);\r\n        }\r\n        else if(item.path==='/planets'){\r\n            setDropDownIcons(Planet);\r\n        }\r\n        else if(item.path==='/species'){\r\n            setDropDownIcons(Alien);\r\n        }\r\n        else if(item.path==='/starships'){\r\n            setDropDownIcons(Rocket);\r\n        }\r\n        else if(item.path==='/vehicles'){\r\n            setDropDownIcons(CarProfile);\r\n        }\r\n        setCurrentPath(item.path);\r\n        fetchDataFromAPI(item.path);\r\n    };\r\n\r\n    const Dropfn=()=>{\r\n        setDropOpen(!dropOpen);\r\n\r\n    }\r\n\r\n\r\n\r\n    const fetchDataFromAPI = async (endpoint) => {\r\n        try {\r\n            const response = await fetch(`https://swapi.dev/api${endpoint}/`);\r\n            //if(endpoint==='/films'){\r\n             //   const data = await response.json();\r\n             //   mNameData=data.results.map((name)=>name.title);\r\n              //  setMoviesName(mNameData);\r\n               // sendDataToParent(moviesName);\r\n               // doSomethingWithData();\r\n\r\n            //}\r\n            let moviesObject = {};\r\n            let peopleObject={};\r\n            let planetsObject={};\r\n            let speciesObject={};\r\n            let starshipsObject={};\r\n            let vehiclesObject={};\r\n\r\n\r\n\r\n            if (endpoint === '/films') {\r\n                const data = await response.json();\r\n                data.results.forEach((movie) => {\r\n                    const movieData = {\r\n                        first: movie.title,\r\n                        second: movie.director,\r\n                        third: movie.release_date,\r\n\r\n                    };\r\n                    moviesObject[movie.title] = movieData;\r\n                });\r\n                setMoviesName(moviesObject);\r\n                sendDataToParent(moviesObject,currentPath);\r\n            }\r\n\r\n            else if(endpoint ==='/people'){\r\n                const data = await response.json();\r\n                data.results.forEach((people) => {\r\n                    const peopleData = {\r\n                        first: people.name,\r\n                        second: people.gender,\r\n                        third: people.birth_year,\r\n\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject);\r\n\r\n            }\r\n            else if(endpoint ==='/planets'){\r\n                const data = await response.json();\r\n                data.results.forEach((planet) => {\r\n                    const planetsData = {\r\n                        first: planet.name,\r\n                        second: planet.terrain,\r\n                        third: planet.population,\r\n\r\n                    };\r\n                    planetsObject[planet.name] = planetsData;\r\n                });\r\n                setMoviesName(planetsObject);\r\n                sendDataToParent(planetsObject);\r\n\r\n            }\r\n            else if(endpoint ==='/species'){\r\n                const data = await response.json();\r\n                data.results.forEach((specie) => {\r\n                    const speciesData = {\r\n                        first: specie.name,\r\n                        second: specie.gender,\r\n                        third: people.birth_year,\r\n\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject);\r\n\r\n            }\r\n            else if(endpoint ==='/starships'){\r\n                const data = await response.json();\r\n                data.results.forEach((people) => {\r\n                    const peopleData = {\r\n                        first: people.name,\r\n                        second: people.gender,\r\n                        third: people.birth_year,\r\n\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject);\r\n\r\n            }\r\n            else if(endpoint ==='/vehicles'){\r\n                const data = await response.json();\r\n                data.results.forEach((people) => {\r\n                    const peopleData = {\r\n                        first: people.name,\r\n                        second: people.gender,\r\n                        third: people.birth_year,\r\n\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject);\r\n\r\n            }\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n\r\n        }\r\n    };\r\n    const doSomethingWithData = () => {\r\n        console.log(mNameData);\r\n    };\r\n\r\n\r\n    const menuElements = [\r\n        {\r\n            icon:Folder,\r\n            title: 'Films',\r\n            path: '/films',\r\n            arrow:Arrow,\r\n        },\r\n        {\r\n            icon:Folder,\r\n            title: 'People',\r\n            path: '/people',\r\n            arrow:Arrow,\r\n        },\r\n        {\r\n            icon:Folder,\r\n            title: 'Planets',\r\n            path: '/planets',\r\n            arrow:Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon:Folder,\r\n            title: 'Species',\r\n            path: '/species',\r\n            arrow:Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon:Folder,\r\n            title: 'Starships',\r\n            path: '/starships',\r\n            arrow:Arrow,\r\n\r\n        }\r\n        ,\r\n        {\r\n            icon:Folder,\r\n            title: 'Vehicles',\r\n            path: '/vehicles',\r\n            arrow:Arrow,\r\n        }\r\n\r\n    ];\r\n    useEffect(() => {\r\n        fetchDataFromAPI(menuElements[0].path);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={``}>\r\n            <div className={` h-screen  ${open?'w-72':'w-24 -ms-6'} relative duration-300 sideNavbarMain`}>\r\n                <div>\r\n                <IoMdArrowBack className={`md:hidden sm:block bg-white text-black-50 text-2xl rounded-full absolute -right-3 top-5 cursor-pointer ${!open && 'rotate-180'}`} onClick={()=>setOpen(!open)}/>\r\n                </div>\r\n                <ul >\r\n                    {menuElements.map((element, index) => (\r\n                        <>\r\n                          <Link to={\"/particularpage\"}>\r\n                            <li key={index} className={`text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `} onClick={() => handleItemClick(element)}>\r\n                                <span className={`pt-1 `}><img src={element.icon}/></span>\r\n                                <span className={`  text-white font-medium  duration-300 flex-1 ${!open && 'hidden'}`}>{element.title}</span>\r\n                                <span className={`${!open && 'hidden'} absolute  duration-300 right-3 pt-1 ${selectedItem && selectedItem.title === element.title && dropOpen ? 'rotate-90' : 'rotate-0'}`} onClick={Dropfn}><img src={element.arrow}/></span>\r\n                            </li>\r\n                          </Link>\r\n                            {dropOpen && selectedItem.title === element.title?  (\r\n                                    <ul className=\" max-h-40 overflow-y-auto uldropNav\">\r\n                                        {Object.keys(moviesName).map((title) => (\r\n                                            <>\r\n                                            <li key={title} className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md mt-2 dropNavBar\">\r\n                                                <span className=\"pt-1\"><img src={dropDownIcons} alt=\"Drop Down Icon\" /></span>\r\n                                                <span className=\"text-white font-medium duration-300 flex-1\">{moviesName[title].first}</span>\r\n                                                <span className=\"absolute duration-300 right-3 pt-1\"><img src={element.arrow} alt=\"Arrow Icon\" /></span>\r\n\r\n                                            </li>\r\n\r\n\r\n\r\n                                            </>\r\n                                        ))}\r\n                                    </ul>\r\n\r\n                            ):\r\n                                <div></div>\r\n                            }\r\n\r\n\r\n\r\n                        </>\r\n                    ))}\r\n                </ul>\r\n\r\n                </div>\r\n\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}