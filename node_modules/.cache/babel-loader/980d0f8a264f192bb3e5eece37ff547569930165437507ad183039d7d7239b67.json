{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\starwars\\\\src\\\\Components\\\\SideNav.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport './sidenav.css';\nimport Folder from '../MenuIcons/FolderSimple.svg';\nimport Alien from '../MenuIcons/Alien.svg';\nimport CarProfile from '../MenuIcons/CarProfile.svg';\nimport FilmReel from '../MenuIcons/FilmReel.svg';\nimport Planet from '../MenuIcons/Planet.svg';\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\nimport Users from '../MenuIcons/Users.svg';\nimport Arrow from '../MenuIcons/CaretRight.svg';\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SideNav({\n  sendDataToParent\n}) {\n  _s();\n  const [open, setOpen] = useState(true);\n  const [dropOpen, setDropOpen] = useState(false);\n  const [moviesName, setMoviesName] = useState({});\n  const [dropDownIcons, setDropDownIcons] = useState(FilmReel);\n  const [currentPath, setCurrentPath] = useState('/films');\n  const [loading, setLoading] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setDropOpen(!dropOpen);\n    if (item.path === '/films') {\n      setDropDownIcons(FilmReel);\n    } else if (item.path === '/people') {\n      setDropDownIcons(Users);\n    } else if (item.path === '/planets') {\n      setDropDownIcons(Planet);\n    } else if (item.path === '/species') {\n      setDropDownIcons(Alien);\n    } else if (item.path === '/starships') {\n      setDropDownIcons(Rocket);\n    } else if (item.path === '/vehicles') {\n      setDropDownIcons(CarProfile);\n    }\n    setCurrentPath(item.path);\n    fetchDataFromAPI(item.path);\n  };\n  const Dropfn = () => {\n    setDropOpen(!dropOpen);\n  };\n  const fetchDataFromAPI = async endpoint => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://swapi.dev/api${endpoint}/`);\n      setLoading(false);\n      let moviesObject = {};\n      let peopleObject = {};\n      let planetsObject = {};\n      if (endpoint === '/films') {\n        const data = await response.json();\n        data.results.forEach(movie => {\n          const movieData = {\n            first: movie.title,\n            second: movie.director,\n            third: movie.release_date\n          };\n          moviesObject[movie.title] = movieData;\n        });\n        setMoviesName(moviesObject);\n        sendDataToParent(moviesObject, dropDownIcons, currentPath, loading);\n      } else if (endpoint === '/people') {\n        const data = await response.json();\n        data.results.forEach(people => {\n          const peopleData = {\n            first: people.name,\n            second: people.gender,\n            third: people.birth_year\n          };\n          peopleObject[people.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\n      } else if (endpoint === '/planets') {\n        const data = await response.json();\n        data.results.forEach(planet => {\n          const planetsData = {\n            first: planet.name,\n            second: planet.terrain,\n            third: planet.population\n          };\n          planetsObject[planet.name] = planetsData;\n        });\n        setMoviesName(planetsObject);\n        sendDataToParent(planetsObject, dropDownIcons, currentPath, loading);\n      } else if (endpoint === '/species') {\n        const data = await response.json();\n        data.results.forEach(species => {\n          const peopleData = {\n            first: species.name,\n            second: species.classification,\n            third: species.language\n          };\n          peopleObject[species.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\n      } else if (endpoint === '/starships') {\n        const data = await response.json();\n        data.results.forEach(starships => {\n          const peopleData = {\n            first: starships.name,\n            second: starships.manufacturer,\n            third: starships.starship_class\n          };\n          peopleObject[starships.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\n      } else if (endpoint === '/vehicles') {\n        const data = await response.json();\n        data.results.forEach(vehicles => {\n          const peopleData = {\n            first: vehicles.name,\n            second: vehicles.model,\n            third: vehicles.vehicle_class\n          };\n          peopleObject[vehicles.name] = peopleData;\n        });\n        setMoviesName(peopleObject);\n        sendDataToParent(peopleObject, dropDownIcons, currentPath);\n      }\n    } catch (error) {\n      console.error('Error fetching data: ', error);\n    }\n  };\n  const menuElements = [{\n    icon: Folder,\n    title: 'Films',\n    path: '/films',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'People',\n    path: '/people',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Planets',\n    path: '/planets',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Species',\n    path: '/species',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Starships',\n    path: '/starships',\n    arrow: Arrow\n  }, {\n    icon: Folder,\n    title: 'Vehicles',\n    path: '/vehicles',\n    arrow: Arrow\n  }];\n  useEffect(() => {\n    fetchDataFromAPI(menuElements[0].path);\n  }, []);\n  const [details, setDetails] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sideBarMain`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` h-screen  relative duration-300 `,\n      children: !details ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: menuElements.map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/particularpage\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `,\n                onClick: () => handleItemClick(element),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `pt-1 `,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: element.icon,\n                    alt: 'icon'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 67\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `  text-white font-medium  duration-300 flex-1 ${!open && 'hidden'}`,\n                  children: element.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${!open && 'hidden'} absolute  duration-300 right-3 pt-1 ${selectedItem && selectedItem.title === element.title && dropOpen ? 'rotate-90' : 'rotate-0'}`,\n                  onClick: Dropfn,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: element.arrow,\n                    alt: 'icon'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 230\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), dropOpen && selectedItem.title === element.title ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \" max-h-40 overflow-y-auto uldropNav\",\n              children: Object.keys(moviesName).map(title => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md mt-2 dropNavBar\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pt-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: dropDownIcons,\n                      alt: \"Drop Down Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 76\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white font-medium duration-300 flex-1\",\n                    children: moviesName[title].first\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"absolute duration-300 right-3 pt-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: element.arrow,\n                      alt: \"Arrow Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 106\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 53\n                  }, this)]\n                }, title, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}\n_s(SideNav, \"r8yZdezHBlyd1MvnPAirYG0RRPQ=\");\n_c = SideNav;\nvar _c;\n$RefreshReg$(_c, \"SideNav\");","map":{"version":3,"names":["React","Folder","Alien","CarProfile","FilmReel","Planet","Rocket","Users","Arrow","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","SideNav","sendDataToParent","_s","open","setOpen","dropOpen","setDropOpen","moviesName","setMoviesName","dropDownIcons","setDropDownIcons","currentPath","setCurrentPath","loading","setLoading","selectedItem","setSelectedItem","handleItemClick","item","path","fetchDataFromAPI","Dropfn","endpoint","response","fetch","moviesObject","peopleObject","planetsObject","data","json","results","forEach","movie","movieData","first","title","second","director","third","release_date","people","peopleData","name","gender","birth_year","planet","planetsData","terrain","population","species","classification","language","starships","manufacturer","starship_class","vehicles","model","vehicle_class","error","console","menuElements","icon","arrow","details","setDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","index","to","onClick","src","alt","Object","keys","_c","$RefreshReg$"],"sources":["D:/React_JS/starwars/src/Components/SideNav.js"],"sourcesContent":["import * as React from 'react';\r\nimport './sidenav.css';\r\nimport Folder from '../MenuIcons/FolderSimple.svg';\r\nimport Alien from '../MenuIcons/Alien.svg';\r\nimport CarProfile from '../MenuIcons/CarProfile.svg';\r\nimport FilmReel from '../MenuIcons/FilmReel.svg';\r\nimport Planet from '../MenuIcons/Planet.svg';\r\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\r\nimport Users from '../MenuIcons/Users.svg';\r\nimport Arrow from '../MenuIcons/CaretRight.svg';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function SideNav({ sendDataToParent }) {\r\n    const [open, setOpen] = useState(true);\r\n    const [dropOpen, setDropOpen] = useState(false);\r\n    const [moviesName, setMoviesName] = useState({});\r\n    const [dropDownIcons, setDropDownIcons] = useState(FilmReel);\r\n    const [currentPath, setCurrentPath] = useState('/films');\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleItemClick = (item) => {\r\n        setSelectedItem(item);\r\n        setDropOpen(!dropOpen);\r\n        if (item.path === '/films') {\r\n            setDropDownIcons(FilmReel);\r\n        }\r\n        else if (item.path === '/people') {\r\n            setDropDownIcons(Users);\r\n        }\r\n        else if (item.path === '/planets') {\r\n            setDropDownIcons(Planet);\r\n        }\r\n        else if (item.path === '/species') {\r\n            setDropDownIcons(Alien);\r\n        }\r\n        else if (item.path === '/starships') {\r\n            setDropDownIcons(Rocket);\r\n        }\r\n        else if (item.path === '/vehicles') {\r\n            setDropDownIcons(CarProfile);\r\n        }\r\n        setCurrentPath(item.path);\r\n        fetchDataFromAPI(item.path);\r\n    };\r\n    const Dropfn = () => {\r\n        setDropOpen(!dropOpen);\r\n    }\r\n    const fetchDataFromAPI = async (endpoint) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`https://swapi.dev/api${endpoint}/`);\r\n            setLoading(false);\r\n            let moviesObject = {};\r\n            let peopleObject = {};\r\n            let planetsObject = {};\r\n            if (endpoint === '/films') {\r\n                const data = await response.json();\r\n                data.results.forEach((movie) => {\r\n                    const movieData = {\r\n                        first: movie.title,\r\n                        second: movie.director,\r\n                        third: movie.release_date,\r\n                    };\r\n                    moviesObject[movie.title] = movieData;\r\n                });\r\n                setMoviesName(moviesObject);\r\n                sendDataToParent(moviesObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/people') {\r\n                const data = await response.json();\r\n                data.results.forEach((people) => {\r\n                    const peopleData = {\r\n                        first: people.name,\r\n                        second: people.gender,\r\n                        third: people.birth_year,\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/planets') {\r\n\r\n                const data = await response.json();\r\n                data.results.forEach((planet) => {\r\n                    const planetsData = {\r\n                        first: planet.name,\r\n                        second: planet.terrain,\r\n                        third: planet.population,\r\n                    };\r\n                    planetsObject[planet.name] = planetsData;\r\n                });\r\n                setMoviesName(planetsObject);\r\n                sendDataToParent(planetsObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/species') {\r\n                const data = await response.json();\r\n                data.results.forEach((species) => {\r\n                    const peopleData = {\r\n                        first: species.name,\r\n                        second: species.classification,\r\n                        third: species.language,\r\n                    };\r\n                    peopleObject[species.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/starships') {\r\n                const data = await response.json();\r\n                data.results.forEach((starships) => {\r\n                    const peopleData = {\r\n                        first: starships.name,\r\n                        second: starships.manufacturer,\r\n                        third: starships.starship_class,\r\n                    };\r\n                    peopleObject[starships.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/vehicles') {\r\n                const data = await response.json();\r\n                data.results.forEach((vehicles) => {\r\n                    const peopleData = {\r\n                        first: vehicles.name,\r\n                        second: vehicles.model,\r\n                        third: vehicles.vehicle_class,\r\n                    };\r\n                    peopleObject[vehicles.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n\r\n        }\r\n    };\r\n    const menuElements = [\r\n        {\r\n            icon: Folder,\r\n            title: 'Films',\r\n            path: '/films',\r\n            arrow: Arrow,\r\n        },\r\n        {\r\n            icon: Folder,\r\n            title: 'People',\r\n            path: '/people',\r\n            arrow: Arrow,\r\n        },\r\n        {\r\n            icon: Folder,\r\n            title: 'Planets',\r\n            path: '/planets',\r\n            arrow: Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Species',\r\n            path: '/species',\r\n            arrow: Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Starships',\r\n            path: '/starships',\r\n            arrow: Arrow,\r\n\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Vehicles',\r\n            path: '/vehicles',\r\n            arrow: Arrow,\r\n        }\r\n\r\n    ];\r\n    useEffect(() => {\r\n        fetchDataFromAPI(menuElements[0].path);\r\n\r\n    }, []);\r\n    const [details, setDetails] = useState(false);\r\n\r\n    return (\r\n        <div className={`sideBarMain`}>\r\n            <div className={` h-screen  relative duration-300 `}>\r\n                {!details ? <>\r\n                    <div></div>\r\n                    <ul >\r\n                        {menuElements.map((element, index) => (\r\n                            <>\r\n                                <Link to={\"/particularpage\"}>\r\n                                    <li key={index} className={`text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `} onClick={() => handleItemClick(element)}>\r\n                                        <span className={`pt-1 `}><img src={element.icon} alt={'icon'}/></span>\r\n                                        <span className={`  text-white font-medium  duration-300 flex-1 ${!open && 'hidden'}`}>{element.title}</span>\r\n                                        <span className={`${!open && 'hidden'} absolute  duration-300 right-3 pt-1 ${selectedItem && selectedItem.title === element.title && dropOpen ? 'rotate-90' : 'rotate-0'}`} onClick={Dropfn}><img src={element.arrow} alt={'icon'}/></span>\r\n                                    </li>\r\n                                </Link>\r\n                                {dropOpen && selectedItem.title === element.title ? (\r\n                                    <ul className=\" max-h-40 overflow-y-auto uldropNav\">\r\n                                        {Object.keys(moviesName).map((title) => (\r\n                                            <>\r\n                                                <li key={title} className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md mt-2 dropNavBar\">\r\n                                                    <span className=\"pt-1\"><img src={dropDownIcons} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-white font-medium duration-300 flex-1\">{moviesName[title].first}</span>\r\n                                                    <span className=\"absolute duration-300 right-3 pt-1\"><img src={element.arrow} alt=\"Arrow Icon\" /></span>\r\n                                                </li>\r\n                                            </>\r\n                                        ))}\r\n                                    </ul>) :\r\n                                    <div></div>\r\n                                }\r\n                            </>\r\n                        ))}\r\n                    </ul>\r\n                </> : <div></div>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}