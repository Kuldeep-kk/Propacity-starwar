[{"D:\\React_JS\\starwars\\src\\index.js":"1","D:\\React_JS\\starwars\\src\\App.js":"2","D:\\React_JS\\starwars\\src\\reportWebVitals.js":"3","D:\\React_JS\\starwars\\src\\Components\\TopBar.js":"4","D:\\React_JS\\starwars\\src\\Components\\HeroSection.js":"5","D:\\React_JS\\starwars\\src\\Components\\SideNav.js":"6","D:\\React_JS\\starwars\\src\\Components\\DefaultPage.js":"7","D:\\React_JS\\starwars\\src\\Components\\ParticularPage.js":"8","D:\\React_JS\\starwars\\src\\Components\\Details.js":"9","D:\\React_JS\\starwars\\src\\Components\\DeleteComponent.js":"10"},{"size":364,"mtime":1690457643572,"results":"11","hashOfConfig":"12"},{"size":279,"mtime":1690749313547,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1690455539780,"results":"14","hashOfConfig":"12"},{"size":1866,"mtime":1690815408257,"results":"15","hashOfConfig":"12"},{"size":3319,"mtime":1690815568086,"results":"16","hashOfConfig":"12"},{"size":9581,"mtime":1690816008082,"results":"17","hashOfConfig":"12"},{"size":904,"mtime":1690815661770,"results":"18","hashOfConfig":"12"},{"size":19875,"mtime":1690824663051,"results":"19","hashOfConfig":"12"},{"size":1466,"mtime":1690816008093,"results":"20","hashOfConfig":"12"},{"size":931,"mtime":1690815689066,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"16365d4",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React_JS\\starwars\\src\\index.js",[],[],[],"D:\\React_JS\\starwars\\src\\App.js",["57"],[],"import './App.css';\nimport {TopBar} from \"./Components/TopBar\";\nimport {HeroSection} from \"./Components/HeroSection\";\n\nfunction App() {\n  return (\n   <div>\n\n       <div className={`heroSectionDiv`}>\n           <HeroSection/>\n       </div>\n\n\n   </div>\n  );\n}\n\nexport default App;\n","D:\\React_JS\\starwars\\src\\reportWebVitals.js",[],[],"D:\\React_JS\\starwars\\src\\Components\\TopBar.js",[],[],"D:\\React_JS\\starwars\\src\\Components\\HeroSection.js",["58"],[],"import * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport './herosection.css';\r\nimport { SideNav } from \"./SideNav\";\r\nimport { DefaultPage } from \"./DefaultPage\";\r\nimport { ParticularPage } from \"./ParticularPage\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CircleLoader } from \"react-spinners\";\r\nimport { TopBar } from \"./TopBar\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nexport function HeroSection() {\r\n    const [dataFromChild, setDataFromChild] = useState([]);\r\n    const [path, setPath] = useState();\r\n    const [location, setLocation] = useState('');\r\n    const [spLoading, setSpLoading] = useState(true);\r\n    const handleDataFromChild = (data, path, loc, load) => {\r\n        setDataFromChild(data);\r\n        setPath(path);\r\n        setLocation(loc);\r\n        setSpLoading(false);\r\n    };\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (value) => {\r\n        setInputValue(value);\r\n    };\r\n    const [menuShow, setMenuShow] = useState(true);\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const handleResize = () => {\r\n        setScreenWidth(window.innerWidth);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    const closeMenufn = () => {\r\n        setMenuShow(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={`topBarFixed`}><TopBar onChangeInput={handleInputChange} /></div>\r\n            {!menuShow && screenWidth < 768 ? (<div className={'menuButton'} onClick={() => { setMenuShow(true) }}>Menu</div>) : (<div></div>)}\r\n            <div className=\"row sideBar\">\r\n                {screenWidth < 768 ? (<>\r\n                    {menuShow ? (<>\r\n                                    <RxCross2 className={`crossButton`} size={35} onClick={closeMenufn} />\r\n                                    <div className=\" col-md-3 col-lg-3  sideNav \">\r\n                                        <SideNav sendDataToParent={handleDataFromChild} />\r\n                                    </div>\r\n                                </>)\r\n                                : (<div></div>)}\r\n                                </>) :\r\n                                (<div className=\" col-md-3 col-lg-3  sideNav \">\r\n                                    <SideNav sendDataToParent={handleDataFromChild} />\r\n                                 </div>)}\r\n                    <div className=\"col-sm-12 col-md-9 col-lg-9   HeroSectionMain \">\r\n                    <Routes>\r\n                        <Route path='/' element={<div className={`defaultDiv`}><DefaultPage /></div>} />\r\n                        <Route path='/particularpage' element={\r\n                            spLoading ? (<div className={`lg:mt-72 sm:mt-40`}> <CircleLoader className={`m-auto `} color=\"#CB1A80\" size={120} /> </div>) : (<>\r\n                                <ParticularPage dataFromChild={dataFromChild} path={path} location={location} load={spLoading} inputValue={inputValue} />\r\n                            </>)\r\n                        } />\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}","D:\\React_JS\\starwars\\src\\Components\\SideNav.js",["59","60","61"],[],"import * as React from 'react';\r\nimport './sidenav.css';\r\nimport Folder from '../MenuIcons/FolderSimple.svg';\r\nimport Alien from '../MenuIcons/Alien.svg';\r\nimport CarProfile from '../MenuIcons/CarProfile.svg';\r\nimport FilmReel from '../MenuIcons/FilmReel.svg';\r\nimport Planet from '../MenuIcons/Planet.svg';\r\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\r\nimport Users from '../MenuIcons/Users.svg';\r\nimport Arrow from '../MenuIcons/CaretRight.svg';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function SideNav({ sendDataToParent }) {\r\n    const [open, setOpen] = useState(true);\r\n    const [dropOpen, setDropOpen] = useState(false);\r\n    const [moviesName, setMoviesName] = useState({});\r\n    const [dropDownIcons, setDropDownIcons] = useState(FilmReel);\r\n    const [currentPath, setCurrentPath] = useState('/films');\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleItemClick = (item) => {\r\n        setSelectedItem(item);\r\n        setDropOpen(!dropOpen);\r\n        if (item.path === '/films') {\r\n            setDropDownIcons(FilmReel);\r\n        }\r\n        else if (item.path === '/people') {\r\n            setDropDownIcons(Users);\r\n        }\r\n        else if (item.path === '/planets') {\r\n            setDropDownIcons(Planet);\r\n        }\r\n        else if (item.path === '/species') {\r\n            setDropDownIcons(Alien);\r\n        }\r\n        else if (item.path === '/starships') {\r\n            setDropDownIcons(Rocket);\r\n        }\r\n        else if (item.path === '/vehicles') {\r\n            setDropDownIcons(CarProfile);\r\n        }\r\n        setCurrentPath(item.path);\r\n        fetchDataFromAPI(item.path);\r\n    };\r\n    const Dropfn = () => {\r\n        setDropOpen(!dropOpen);\r\n    }\r\n    const fetchDataFromAPI = async (endpoint) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`https://swapi.dev/api${endpoint}/`);\r\n            setLoading(false);\r\n            let moviesObject = {};\r\n            let peopleObject = {};\r\n            let planetsObject = {};\r\n            if (endpoint === '/films') {\r\n                const data = await response.json();\r\n                data.results.forEach((movie) => {\r\n                    const movieData = {\r\n                        first: movie.title,\r\n                        second: movie.director,\r\n                        third: movie.release_date,\r\n                    };\r\n                    moviesObject[movie.title] = movieData;\r\n                });\r\n                setMoviesName(moviesObject);\r\n                sendDataToParent(moviesObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/people') {\r\n                const data = await response.json();\r\n                data.results.forEach((people) => {\r\n                    const peopleData = {\r\n                        first: people.name,\r\n                        second: people.gender,\r\n                        third: people.birth_year,\r\n                    };\r\n                    peopleObject[people.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/planets') {\r\n\r\n                const data = await response.json();\r\n                data.results.forEach((planet) => {\r\n                    const planetsData = {\r\n                        first: planet.name,\r\n                        second: planet.terrain,\r\n                        third: planet.population,\r\n                    };\r\n                    planetsObject[planet.name] = planetsData;\r\n                });\r\n                setMoviesName(planetsObject);\r\n                sendDataToParent(planetsObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/species') {\r\n                const data = await response.json();\r\n                data.results.forEach((species) => {\r\n                    const peopleData = {\r\n                        first: species.name,\r\n                        second: species.classification,\r\n                        third: species.language,\r\n                    };\r\n                    peopleObject[species.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/starships') {\r\n                const data = await response.json();\r\n                data.results.forEach((starships) => {\r\n                    const peopleData = {\r\n                        first: starships.name,\r\n                        second: starships.manufacturer,\r\n                        third: starships.starship_class,\r\n                    };\r\n                    peopleObject[starships.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath, loading);\r\n            }\r\n            else if (endpoint === '/vehicles') {\r\n                const data = await response.json();\r\n                data.results.forEach((vehicles) => {\r\n                    const peopleData = {\r\n                        first: vehicles.name,\r\n                        second: vehicles.model,\r\n                        third: vehicles.vehicle_class,\r\n                    };\r\n                    peopleObject[vehicles.name] = peopleData;\r\n                });\r\n                setMoviesName(peopleObject);\r\n                sendDataToParent(peopleObject, dropDownIcons, currentPath);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error);\r\n\r\n        }\r\n    };\r\n    const menuElements = [\r\n        {\r\n            icon: Folder,\r\n            title: 'Films',\r\n            path: '/films',\r\n            arrow: Arrow,\r\n        },\r\n        {\r\n            icon: Folder,\r\n            title: 'People',\r\n            path: '/people',\r\n            arrow: Arrow,\r\n        },\r\n        {\r\n            icon: Folder,\r\n            title: 'Planets',\r\n            path: '/planets',\r\n            arrow: Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Species',\r\n            path: '/species',\r\n            arrow: Arrow,\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Starships',\r\n            path: '/starships',\r\n            arrow: Arrow,\r\n\r\n        }\r\n        ,\r\n        {\r\n            icon: Folder,\r\n            title: 'Vehicles',\r\n            path: '/vehicles',\r\n            arrow: Arrow,\r\n        }\r\n\r\n    ];\r\n    useEffect(() => {\r\n        fetchDataFromAPI(menuElements[0].path);\r\n\r\n    }, []);\r\n    const [details, setDetails] = useState(false);\r\n\r\n    return (\r\n        <div className={`sideBarMain`}>\r\n            <div className={` h-screen  relative duration-300 `}>\r\n                {!details ? <>\r\n                    <div></div>\r\n                    <ul >\r\n                        {menuElements.map((element, index) => (\r\n                            <>\r\n                                <Link to={\"/particularpage\"}>\r\n                                    <li key={index} className={`text-white gap-x-4 flex item-center relative cursor-pointer hover:bg-white  duration-300  rounded-md mt-2 sideNavBar-${selectedItem && selectedItem.title === element.title ? 'selected' : 'unselected'} `} onClick={() => handleItemClick(element)}>\r\n                                        <span className={`pt-1 `}><img src={element.icon} alt={'icon'}/></span>\r\n                                        <span className={`  text-white font-medium  duration-300 flex-1 ${!open && 'hidden'}`}>{element.title}</span>\r\n                                        <span className={`${!open && 'hidden'} absolute  duration-300 right-3 pt-1 ${selectedItem && selectedItem.title === element.title && dropOpen ? 'rotate-90' : 'rotate-0'}`} onClick={Dropfn}><img src={element.arrow} alt={'icon'}/></span>\r\n                                    </li>\r\n                                </Link>\r\n                                {dropOpen && selectedItem.title === element.title ? (\r\n                                    <ul className=\" max-h-40 overflow-y-auto uldropNav\">\r\n                                        {Object.keys(moviesName).map((title) => (\r\n                                            <>\r\n                                                <li key={title} className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md mt-2 dropNavBar\">\r\n                                                    <span className=\"pt-1\"><img src={dropDownIcons} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-white font-medium duration-300 flex-1\">{moviesName[title].first}</span>\r\n                                                    <span className=\"absolute duration-300 right-3 pt-1\"><img src={element.arrow} alt=\"Arrow Icon\" /></span>\r\n                                                </li>\r\n                                            </>\r\n                                        ))}\r\n                                    </ul>) :\r\n                                    <div></div>\r\n                                }\r\n                            </>\r\n                        ))}\r\n                    </ul>\r\n                </> : <div></div>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","D:\\React_JS\\starwars\\src\\Components\\DefaultPage.js",[],[],"D:\\React_JS\\starwars\\src\\Components\\ParticularPage.js",["62"],[],"import * as React from 'react';\r\nimport mainPic from \"../Images/mainPic.jpg\";\r\nimport GridIcon from \"../Images/View grid.svg\";\r\nimport listIcon from \"../Images/View list.svg\";\r\nimport moreIcon from \"../MenuIcons/ic_More.svg\";\r\nimport './particularpage.css'\r\nimport { useEffect, useState } from \"react\";\r\nimport Alien from '../MenuIcons/Alien.svg';\r\nimport CarProfile from '../MenuIcons/CarProfile.svg';\r\nimport FilmReel from '../MenuIcons/FilmReel.svg';\r\nimport Planet from '../MenuIcons/Planet.svg';\r\nimport Rocket from '../MenuIcons/RocketLaunch.svg';\r\nimport Users from '../MenuIcons/Users.svg';\r\nimport view from '../DropDownMenuIcon/Frame.svg';\r\nimport download from '../DropDownMenuIcon/download.svg';\r\nimport rename from '../DropDownMenuIcon/rename.svg';\r\nimport share from '../DropDownMenuIcon/share.svg';\r\nimport move from '../DropDownMenuIcon/move.svg';\r\nimport mprivate from '../DropDownMenuIcon/private.svg';\r\nimport delicon from '../DropDownMenuIcon/delete.svg';\r\nimport { CircleLoader } from \"react-spinners\";\r\nimport { Details } from \"./Details\";\r\nimport { DeleteComponent } from \"./DeleteComponent\";\r\nimport movieImg from \"../Images/films.jpg\";\r\nimport peopleImg from '../Images/people.jpg';\r\nimport planetImg from '../Images/planets.jpg';\r\nimport speciesImg from '../Images/species.jpg';\r\nimport starshipsImg from '../Images/starships.jpg';\r\nimport vehicleImg from '../Images/vehicles.jpg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function ParticularPage({ dataFromChild, path, location, load, inputValue }) {\r\n\r\n    const [isGridSelectedLayout, setIsGridSelectedLayout] = useState(true);\r\n    const [tabName, setTabName] = useState('');\r\n    const [icon, setIcon] = useState(FilmReel);\r\n    const [dataImg,setDataImg]=useState(mainPic);\r\n\r\n    const [firstCol, setFirstCol] = useState('');\r\n    const [secondCol, setSecondCol] = useState('');\r\n    const [thirdCol, setThirdCol] = useState('');\r\n\r\n    const fetchData = () => {\r\n\r\n        if (location === '/films') {\r\n\r\n            setTabName('Films');\r\n            setIcon(FilmReel);\r\n            setFirstCol('Name');\r\n            setSecondCol('Director');\r\n            setThirdCol('Release Date')\r\n            setDataImg(movieImg);\r\n\r\n        } else if (location === '/planets') {\r\n            setIcon(Planet);\r\n            setTabName('Planets');\r\n            setFirstCol('Name');\r\n            setSecondCol('Terrain');\r\n            setThirdCol('Population');\r\n            setDataImg(planetImg);\r\n        }\r\n        else if (location === '/people') {\r\n            setIcon(Users);\r\n            setTabName('People');\r\n            setFirstCol('Name');\r\n            setSecondCol('Gender');\r\n            setThirdCol('Birth Year');\r\n            setDataImg(peopleImg);\r\n        }\r\n        else if (location === '/starships') {\r\n            setIcon(Rocket);\r\n            setTabName('Starships');\r\n            setFirstCol('Name');\r\n            setSecondCol('Manufacturer');\r\n            setThirdCol('Starship Class');\r\n            setDataImg(starshipsImg);\r\n        }\r\n        else if (location === '/species') {\r\n            setIcon(Alien);\r\n            setTabName('Species');\r\n            setFirstCol('Name');\r\n            setSecondCol('Classification');\r\n            setThirdCol('Language');\r\n            setDataImg(speciesImg);\r\n        }\r\n        else if (location === '/vehicles') {\r\n            setIcon(CarProfile);\r\n            setTabName('Vehicles');\r\n            setFirstCol('Name');\r\n            setSecondCol('model');\r\n            setThirdCol('Vehicle Class');\r\n            setDataImg(vehicleImg);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData, location]);\r\n\r\n    const [isMoreClick, setIsMoreClick] = useState(false);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const getMoreOption = (getname) => {\r\n        setIsMoreClick(!isMoreClick);\r\n        setSelectedItem(getname);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setIsMoreClick(false);\r\n        };\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    const [detailView, setDetailView] = useState(false);\r\n    const [firstData, setFirstData] = useState('');\r\n    const [secondData, setSecondData] = useState('');\r\n    const [thirdData, setThirdData] = useState('');\r\n    const handleDetailView = (data) => {\r\n        setFirstData(dataFromChild[data].first);\r\n        setSecondData(dataFromChild[data].second);\r\n        setThirdData(dataFromChild[data].third);\r\n        setDetailView(!detailView);\r\n    }\r\n    const handleSidebarClose = () => {\r\n        setDetailView(false);\r\n    };\r\n\r\n    const [delPopOpen, setDelPopOpen] = useState(false);\r\n    const openDeletePop = () => {\r\n        setDelPopOpen(!delPopOpen);\r\n    }\r\n    const handlePopDel = () => {\r\n        setIsMoreClick(false);\r\n        setDelPopOpen(false);\r\n    };\r\n\r\n    const handleViewClick = (data) => {\r\n        setIsMoreClick(false);\r\n        handleDetailView(data);\r\n\r\n    }\r\n    const filteredMovieNames = Object.keys(dataFromChild).filter(\r\n        (title) =>\r\n            title.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n\r\n    const [clickPosition, setClickPosition] = useState({ x: 0, y: 0 });\r\n    const handleClickPosition = (event) => {\r\n        const { clientX, clientY } = event;\r\n        setClickPosition({ x: clientX, y: clientY });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {load ? (<> <CircleLoader color=\"#36d7b7\" /> </>) : (\r\n                <div className=\"particularPageMain mt-3\">\r\n                    {detailView && (\r\n                        <div className={`detailViewContainer ${detailView ? 'open' : ''}`}>\r\n                            {detailView ? (<div className={`detailViewMain`}>\r\n                                <Details first={firstData} second={secondData} third={thirdData} title={tabName} firstTag={firstCol} secondTag={secondCol} thirdTag={thirdCol} onClose={handleSidebarClose} />\r\n                            </div>) : (<div></div>)}\r\n                        </div>\r\n                    )}\r\n                    <div className={`text-white topBarParticular  flex item-center relative cursor-pointer duration-300  rounded-md  mb-4 `}>\r\n                        <span className={`-mt-1 text-gray-800`}><img src={icon} alt={'icon'}/></span>\r\n                        <span className={` font-medium ml-2  duration-300 flex-1 `}>{tabName}</span>\r\n                        <span className={`absolute flex item-center  duration-300  pt-1 ${isGridSelectedLayout ? 'selectedLayoutGrid' : 'normalLayoutGrid'}`} onClick={() => setIsGridSelectedLayout(!isGridSelectedLayout)} ><img src={GridIcon} className={`layoutselectorsize`} alt={'icon'}/><span className={`text-black-50 my-0.5 ${isGridSelectedLayout ? 'block' : 'hidden'}`}>Grid</span></span>\r\n                        <span className={`absolute  flex item-center duration-300  pt-1  ${!isGridSelectedLayout ? 'selectedLayoutList' : 'normalLayoutList'}`} onClick={() => setIsGridSelectedLayout(!isGridSelectedLayout)}><img src={listIcon} className={`layoutselectorsize`} alt={'icon'}/><span className={`text-black-50 my-0.5  ${!isGridSelectedLayout ? 'block' : 'hidden'}`}>List</span></span>\r\n                    </div>\r\n                    <div className=\"row duration-300\">\r\n                       {isGridSelectedLayout ? (\r\n                            <>\r\n                                {filteredMovieNames.map((title) => (\r\n                                    <div className=\"col-lg-4 col-md-6 mb-4 gridDropDown\">\r\n                                        <div className=\"card duration-300 DataCard\">\r\n                                            <img src={dataImg} className=\"card-img-top dataImg \" alt=\"...\" width={10} height={10} onClick={() => handleDetailView(title)} />\r\n                                            <div className=\"card-body DataCardBody\" >\r\n                                                <div className={`text-white  flex item-center relative cursor-pointer duration-300  rounded-md  `}>\r\n                                                    <span className={`-mt-1 text-gray-800`}><img src={icon} alt={'icon'}/></span>\r\n                                                    <span className={` font-medium ml-2  duration-300 flex-1 `} >{title}</span>\r\n                                                    <span className={`absolute  duration-300 right-3 pt-1 dotIcon`} onClick={() => getMoreOption(dataFromChild[title].first)} ><img src={moreIcon} alt={'icon'} onClick={handleClickPosition} /></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {isMoreClick && selectedItem === dataFromChild[title].first ? (\r\n                                            <div className={`bg-white dropDownMenuGrid`}\r\n                                                style={{\r\n                                                    top: clickPosition.y + 40 + 'px',\r\n                                                    left: clickPosition.x - 200 + 'px',\r\n                                                }}>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem \" onClick={() => handleViewClick(title)}>\r\n                                                    <span className=\"pt-1\"><img src={view} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">View</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={download} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Download</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={rename} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Rename</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={share} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Share Link</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={move} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Move</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center  cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={mprivate} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Mark Private</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\" onClick={openDeletePop}>\r\n                                                    <span className=\"pt-1\"><img src={delicon} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"font-medium duration-300 flex-1 text-red-500\">Delete</span>\r\n                                                </div>\r\n                                            </div>) :\r\n                                            <div></div>\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </>) :\r\n                            <>\r\n                                <div className={`row headList ml-0.5`}>\r\n                                    <div className=\"col-5   p-3\">\r\n                                        {firstCol}\r\n                                    </div>\r\n                                    <div className=\"col-3   p-3 \">\r\n                                        {secondCol}\r\n                                    </div>\r\n                                    <div className=\"col-3  p-3 \">\r\n                                        {thirdCol}\r\n                                    </div>\r\n                                    <div className=\"col-1  p-3\">\r\n                                    </div>\r\n                                </div>\r\n                                {filteredMovieNames.map((title) => (\r\n                                    <div className=\"col-lg-12 col-md-12 mb-2 mt-2 dropDownContainer\">\r\n                                        <div className=\"row DataList\">\r\n                                            <div className=\"col-5  p-3\">\r\n                                                <div className={` text-white  flex item-center relative cursor-pointer duration-300  rounded-md  `}>\r\n                                                    <span className={`-mt-1 text-gray-800`}><img src={icon} alt={'icon'}/></span>\r\n                                                    <span className={` font-medium ml-2  duration-300 flex-1 `}>{title}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-3  p-3 text-white\">\r\n                                                {dataFromChild[title].second}\r\n                                            </div>\r\n                                            <div className=\"col-3 p-3 text-white\">\r\n                                                {dataFromChild[title].third}\r\n                                            </div>\r\n                                            <div className=\"col-1 moreDot  p-3\">\r\n                                                <span className={`absolute  duration-300 right-3 pt-1 dotIcon`} onClick={() => getMoreOption(dataFromChild[title].first)} ><img src={moreIcon} onClick={handleClickPosition} alt={'icon'}/></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        {isMoreClick && selectedItem === dataFromChild[title].first ? (\r\n                                            <div className={`bg-white dropDownMenu`}  style={{\r\n                                                top: clickPosition.y + 30 + 'px',\r\n                                                left: clickPosition.x -170 + 'px',\r\n                                            }}>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem \" onClick={() => handleViewClick(title)}>\r\n                                                    <span className=\"pt-1\"><img src={view} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">View</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={download} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Download</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={rename} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Rename</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={share} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Share Link</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={move} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Move</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center  cursor-pointer duration-300 rounded-md  dropDownMenuItem\">\r\n                                                    <span className=\"pt-1\"><img src={mprivate} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"text-black font-medium duration-300 flex-1\">Mark Private</span>\r\n                                                </div>\r\n                                                <div className=\"text-white gap-x-4 flex items-center relative cursor-pointer duration-300 rounded-md  dropDownMenuItem\" onClick={openDeletePop}>\r\n                                                    <span className=\"pt-1\"><img src={delicon} alt=\"Drop Down Icon\" /></span>\r\n                                                    <span className=\"font-medium duration-300 flex-1 text-red-500\">Delete</span>\r\n                                                </div>\r\n                                            </div>) :\r\n                                            <div></div>\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        }\r\n                    </div>\r\n                    {delPopOpen && <div className=\"background-blur\" />}\r\n                    <div className={`deleteContainer ${detailView ? 'open' : ''}`}>\r\n                        {delPopOpen && <DeleteComponent onClose={handlePopDel} />}\r\n                    </div>\r\n                </div>\r\n            )}</>\r\n    );\r\n}","D:\\React_JS\\starwars\\src\\Components\\Details.js",[],[],"D:\\React_JS\\starwars\\src\\Components\\DeleteComponent.js",[],[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"68","line":16,"column":18,"nodeType":"65","messageId":"66","endLine":16,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":189,"column":8,"nodeType":"71","endLine":189,"endColumn":10,"suggestions":"72"},{"ruleId":"63","severity":1,"message":"73","line":190,"column":21,"nodeType":"65","messageId":"66","endLine":190,"endColumn":31},{"ruleId":"69","severity":1,"message":"74","line":47,"column":11,"nodeType":"75","endLine":98,"endColumn":6},"no-unused-vars","'TopBar' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'setOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchDataFromAPI' and 'menuElements'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'setDetails' is assigned a value but never used.","The 'fetchData' function makes the dependencies of useEffect Hook (at line 103) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'fetchData' in its own useCallback() Hook.","VariableDeclarator",{"desc":"77","fix":"78"},"Update the dependencies array to be: [fetchDataFromAPI, menuElements]",{"range":"79","text":"80"},[6834,6836],"[fetchDataFromAPI, menuElements]"]